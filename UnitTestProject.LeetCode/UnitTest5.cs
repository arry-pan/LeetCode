using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Algorithms;

namespace UnitTestProject.LeetCode
{
    [TestClass]
    public class UnitTest5
    {
        /// <summary>
        /// 测试回文判断
        /// </summary>
        [TestMethod]
        public void TestMethod1()
        {
            string param1 = "abba";
            var act1 = new question5().isPalindromic(param1);

            string param2 = "aba";
            var act2 = new question5().isPalindromic(param2);

            string param3 = "abca";
            var act3 = new question5().isPalindromic(param3);

            string param4 = "a";
            var act4 = new question5().isPalindromic(param4);

            Assert.IsTrue(act1);
            Assert.IsTrue(act2);
            Assert.IsFalse(act3);
            Assert.IsTrue(act4);

        }

        /// <summary>
        /// 测试暴力法回文最长子串
        /// </summary>
        [TestMethod]
        public void TestMethod2()
        {
            string param1 = "babad";
            var act1 = new question5().LongestPalindrome(param1);
            var except1 = "bab";
            Assert.AreEqual(except1,act1, true);

            string param2 = "cbbdb";
            var act2 = new question5().LongestPalindrome(param2);
            var except2 = "bdb";
            Assert.AreEqual(except2, act2, true);
        }

        /// <summary>
        /// 测试扩展中心法
        /// </summary>
        [TestMethod]
        public void TestMethod3()
        {
            string param1 = "babad";
            var act1 = new question5().LongestPalindrome3(param1);
            var except1_1 = "aba";
            var except1_2 = "bab";
            Assert.IsTrue(except1_1 == act1 || except1_2 == act1);

            string param2 = "lejyqjcpluiggwlmnumqpxljlcwdsirzwlygexejhvojztcztectzrepsvwssiixfmpbzshpilmojehqyqpzdylxptsbvkgatzdlzphohntysrbrcdgeaiypmaaqilthipjbckkfbxtkreohabrjpmelxidlwdajmkndsdbbaypcemrwlhwbwaljacijjmsaqembgtdcskejplifnuztlmvasbqcyzmvczpkimpbbwxdtviptzaenkbddaauyvqppagvqfpednnckooxzcpuudckakutqyknuqrxjgfdtsxsoztjkqvfvelrklforpjnrbvyyvxigjhkjmxcphjzzilvbjbvwiwnnkbmboiqamgoimujtswdqesighoxsprhnsceshotakvmoxqkqjvbpqucvafiuqwmrlfjpjijbctfupywkbawquchbclgvhxbanybret";
            var act2 = new question5().LongestPalindrome3(param2);
            var except2 = "vbjbv";
            Assert.AreEqual(except2, act2, true);

            string param
            var act3 = new question5().LongestPalindrome3(param3);
            var except
            Assert.IsTrue(except3 == act3);

            string param4 = "1111";
            var act4 = new question5().LongestPalindrome3(param4);
            var except4 = "1111";
            Assert.IsTrue(except4 == act4);

            string param5 = "a";
            var act5 = new question5().LongestPalindrome3(param5);
            var except5 = "a";
            Assert.IsTrue(except5 == act5);
        }

        /// <summary>
        /// 测试填充字符串
        /// </summary>
        [TestMethod]
        public void TestMethod4()
        {
            string param1 = "aba";
            var act1 = new question5().PreProcessString(param1);
            var except1 = "^#a#b#a#$";
            Assert.AreEqual(except1, act1, true);

            string param2 = "1";
            var act2 = new question5().PreProcessString(param2);
            var except2 = "^#1#$";
            Assert.AreEqual(except2, act2, true);



        }

        /// <summary>
        /// 测试马拉车算法
        /// </summary>
        [TestMethod]
        public void TestMethod5()
        {
            string param1 = "babad";
            var act1 = new question5().LongestPalindrome4(param1);
            var except1_1 = "aba";
            var except1_2 = "bab";
            Assert.IsTrue(except1_1 == act1 || except1_2 == act1);

            string param2 = "lejyqjcpluiggwlmnumqpxljlcwdsirzwlygexejhvojztcztectzrepsvwssiixfmpbzshpilmojehqyqpzdylxptsbvkgatzdlzphohntysrbrcdgeaiypmaaqilthipjbckkfbxtkreohabrjpmelxidlwdajmkndsdbbaypcemrwlhwbwaljacijjmsaqembgtdcskejplifnuztlmvasbqcyzmvczpkimpbbwxdtviptzaenkbddaauyvqppagvqfpednnckooxzcpuudckakutqyknuqrxjgfdtsxsoztjkqvfvelrklforpjnrbvyyvxigjhkjmxcphjzzilvbjbvwiwnnkbmboiqamgoimujtswdqesighoxsprhnsceshotakvmoxqkqjvbpqucvafiuqwmrlfjpjijbctfupywkbawquchbclgvhxbanybret";
            var act2 = new question5().LongestPalindrome4(param2);
            var except2 = "vbjbv";
            Assert.AreEqual(except2, act2, true);

            string param
            var act3 = new question5().LongestPalindrome4(param3);
            var except
            Assert.IsTrue(except3 == act3);

            string param4 = "111";
            var act4 = new question5().LongestPalindrome4(param4);
            var except4 = "111";
            Assert.IsTrue(except4 == act4);

            string param5 = "";
            var act5 = new question5().LongestPalindrome4(param5);
            var except5 = "";
            Assert.IsTrue(except5 == act5);
        }

        /// <summary>
        /// 测试
        /// </summary>
        [TestMethod]
        public void TestMethod6()
        {
            string param1 = "babad";
            var act1 = new question5().LongestPalindrome5(param1);
            var except1_1 = "aba";
            var except1_2 = "bab";
            Assert.IsTrue(except1_1 == act1 || except1_2 == act1);

            string param2 = "lejyqjcpluiggwlmnumqpxljlcwdsirzwlygexejhvojztcztectzrepsvwssiixfmpbzshpilmojehqyqpzdylxptsbvkgatzdlzphohntysrbrcdgeaiypmaaqilthipjbckkfbxtkreohabrjpmelxidlwdajmkndsdbbaypcemrwlhwbwaljacijjmsaqembgtdcskejplifnuztlmvasbqcyzmvczpkimpbbwxdtviptzaenkbddaauyvqppagvqfpednnckooxzcpuudckakutqyknuqrxjgfdtsxsoztjkqvfvelrklforpjnrbvyyvxigjhkjmxcphjzzilvbjbvwiwnnkbmboiqamgoimujtswdqesighoxsprhnsceshotakvmoxqkqjvbpqucvafiuqwmrlfjpjijbctfupywkbawquchbclgvhxbanybret";
            var act2 = new question5().LongestPalindrome5(param2);
            var except2 = "vbjbv";
            Assert.AreEqual(except2, act2, true);

            string param
            var act3 = new question5().LongestPalindrome5(param3);
            var except
            Assert.IsTrue(except3 == act3);

            string param4 = "111";
            var act4 = new question5().LongestPalindrome5(param4);
            var except4 = "111";
            Assert.IsTrue(except4 == act4);

            string param5 = "";
            var act5 = new question5().LongestPalindrome5(param5);
            var except5 = "";
            Assert.IsTrue(except5 == act5);
        }
    }
}
